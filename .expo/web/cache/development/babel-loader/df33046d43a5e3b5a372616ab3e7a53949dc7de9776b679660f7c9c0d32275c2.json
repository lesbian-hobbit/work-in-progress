{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, firebase } from \"../firebase\";\nimport { collection, setDoc, doc, getDoc } from 'firebase/firestore';\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var todoRef = firebase.firestore().collection('UsersX');\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    id = _useState4[0],\n    setId = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    availableAmount = _useState8[0],\n    setAvailableAmount = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    newavailableAmount = _useState10[0],\n    setNewAvailableAmount = _useState10[1];\n  var asd = 'Ceua2O9PgXnDDSFMGGFD';\n  useEffect(function () {\n    todoRef.onSnapshot(function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n          id = _doc$data.id,\n          availableAmount = _doc$data.availableAmount,\n          email = _doc$data.email;\n        users.push({\n          id: doc.id,\n          availableAmount: availableAmount,\n          email: email\n        });\n      });\n      setUsers(users);\n    });\n  }, []);\n  var updateData = function updateData() {\n    todoRef.doc(asd).update({\n      availableAmount: +Number(availableAmount)\n    }).then(function () {\n      console.log(availableAmount);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      marginTop: 100\n    },\n    children: [_jsx(FlatList, {\n      style: {\n        height: '100%'\n      },\n      data: users,\n      numColumns: 1,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(Pressable, {\n          style: styles.container,\n          children: [_jsxs(View, {\n            style: styles.innerContainer,\n            children: [_jsx(Text, {\n              style: styles.itemHeading,\n              children: item.email\n            }), _jsxs(Text, {\n              style: styles.itemText,\n              children: [\"Available Money: \", parseInt(item.availableAmount)]\n            }), _jsx(Text, {\n              style: styles.itemText,\n              children: item.id\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(TextInput, {\n              value: email,\n              onChange: setEmail,\n              placeholder: \"Enter User Email: \"\n            }), _jsx(TextInput, {\n              value: availableAmount,\n              onChangeText: setAvailableAmount,\n              placeholder: \"How much do you wish to send: \"\n            })]\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: updateData,\n      children: _jsx(Text, {\n        children: \"Add\"\n      })\n    })]\n  });\n};\nexport default Dashboard;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#e5e5e5',\n    padding: 15,\n    borderRadius: 15,\n    margin: 5,\n    marginHorizontal: 10\n  },\n  innerContainer: {\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  itemHeading: {\n    fontWeight: 'bold'\n  },\n  itemText: {\n    fontWeight: '300'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","auth","firebase","collection","setDoc","doc","getDoc","db","jsx","_jsx","jsxs","_jsxs","Dashboard","_useState","_useState2","_slicedToArray","users","setUsers","todoRef","firestore","_useState3","_useState4","id","setId","_useState5","_useState6","email","setEmail","_useState7","_useState8","availableAmount","setAvailableAmount","_useState9","_useState10","newavailableAmount","setNewAvailableAmount","asd","onSnapshot","querySnapshot","forEach","_doc$data","data","push","updateData","update","Number","then","console","log","View","style","flex","marginTop","children","FlatList","height","numColumns","renderItem","_ref","item","Pressable","styles","container","innerContainer","Text","itemHeading","itemText","parseInt","TextInput","value","onChange","placeholder","onChangeText","TouchableOpacity","onPress","StyleSheet","create","backgroundColor","padding","borderRadius","margin","marginHorizontal","alignItems","flexDirection","fontWeight"],"sources":["C:/Users/User/asd - Copy/screens/Dashboard.js"],"sourcesContent":["import { View, Text, FlatList, StyleSheet, Pressable, TextInput, Button, Touchable, TouchableOpacity } from 'react-native';\r\nimport React ,{useState, useEffect} from 'react';\r\nimport { auth, firebase } from '../firebase';\r\nimport {collection, setDoc, doc, getDoc} from 'firebase/firestore'\r\nimport { db } from '../firebase'\r\nconst Dashboard = () => {\r\n    \r\n    const [users, setUsers] = useState([]);\r\n    const todoRef = firebase.firestore().collection('UsersX');\r\n\r\n    const [id , setId] = useState('')\r\n    const [email, setEmail] = useState('');\r\n    const [ availableAmount, setAvailableAmount] = useState('')\r\n    const [ newavailableAmount, setNewAvailableAmount] = useState('')\r\n    const asd = 'Ceua2O9PgXnDDSFMGGFD'\r\n   \r\n\r\n    \r\n    useEffect( () => {\r\n      \r\n      todoRef\r\n      .onSnapshot(\r\n        querySnapshot => {\r\n          const users = []\r\n          querySnapshot.forEach((doc) => {\r\n            const {id, availableAmount, email} = doc.data()\r\n              users.push({\r\n                id: doc.id,\r\n                 availableAmount,\r\n                email,\r\n              }) \r\n          }) \r\n          setUsers(users)\r\n        }\r\n      )\r\n    },[])\r\n\r\n    const updateData = () => {\r\n      todoRef\r\n      .doc(asd)\r\n      .update({\r\n        availableAmount:+Number(availableAmount),\r\n      })\r\n      .then (() =>{\r\n        console.log(availableAmount);\r\n      })\r\n    };\r\n      \r\n  return (\r\n    <View style= {{ flex:1, marginTop:100}}>\r\n      <FlatList\r\n          style={{height:'100%' }}\r\n          data={users}\r\n          numColumns={1}\r\n          renderItem={({item}) => (\r\n            <Pressable\r\n                style={styles.container}\r\n            >\r\n                <View style={styles.innerContainer}>\r\n                  <Text style={styles.itemHeading}>{item.email}</Text>\r\n                  <Text style={styles.itemText}>Available Money: {parseInt(item.availableAmount) }</Text>\r\n                  <Text style={styles.itemText}>{item.id}</Text>\r\n                </View>\r\n                <View>\r\n                  <TextInput \r\n                  value={email} \r\n                  onChange={setEmail} \r\n                  placeholder=\"Enter User Email: \">\r\n\r\n                  </TextInput>\r\n                  <TextInput \r\n                  value={availableAmount} \r\n                  onChangeText={setAvailableAmount} \r\n                  placeholder=\"How much do you wish to send: \">\r\n\r\n                  </TextInput>\r\n                </View>\r\n            \r\n            </Pressable>\r\n            \r\n          )}\r\n      />\r\n      <TouchableOpacity  onPress={updateData}>\r\n            <Text>Add</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n      backgroundColor: '#e5e5e5',\r\n      padding:15,\r\n      borderRadius:15,\r\n      margin:5,\r\n      marginHorizontal: 10,\r\n    },\r\n    innerContainer:{\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n\r\n    },\r\n    itemHeading:{\r\n      fontWeight:'bold'\r\n    },\r\n    itemText:{\r\n      fontWeight: '300'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}